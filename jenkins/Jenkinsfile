node {
    // Configure Poll SCM trigger to check every 2 minutes
    properties([
        pipelineTriggers([
            pollSCM('H/2 * * * *')
        ])
    ])

    stage('Checkout') {
        checkout scm
        
        // Debug workspace contents
        sh '''
            echo "===== Workspace Structure ====="
            pwd
            echo "\nFull directory structure:"
            find . -type f
            echo "\nCurrent directory contents:"
            ls -la
        '''
    }
    
    stage('Build') {
        docker.image('python:2-alpine').inside {
            sh '''
                echo "===== Build Stage Debug ====="
                pwd
                echo "\nCurrent directory contents:"
                ls -la
                echo "\nParent directory contents:"
                ls -la ..
                
                # Ensure we're in the jenkins directory
                cd jenkins
                echo "\nAfter cd jenkins:"
                pwd
                ls -la
                
                # Compile Python files with correct path
                python -m py_compile ../sources/add2vals.py ../sources/calc.py
            '''
        }
    }
    
    stage('Test') {
        docker.image('qnib/pytest').inside {
            try {
                sh '''
                echo "===== Test Stage Debug ====="
                pwd
                ls -la
                
                # Create test reports directory
                mkdir -p test-reports
                
                # Run tests with correct path
                py.test --verbose --junit-xml test-reports/results.xml sources/test_calc.py
                '''
            } finally {
                junit 'test-reports/results.xml'
            }
        }
    }
    
    stage('Deliver') { 
            docker.image('cdrx/pyinstaller-linux:python2').inside {
                sh '''
                    # Install required packages
                    pip install pyinstaller
                    
                    # Create dist directory
                    mkdir -p dist
                    
                    # Show workspace contents
                    echo "Current directory:"
                    pwd
                    ls -la
                    
                    # Run pyinstaller
                    pyinstaller --onefile sources/add2vals.py
                    
                    # Show dist contents
                    echo "Dist directory contents:"
                    ls -la dist/
                '''
                
                if (currentBuild.resultIsBetterOrEqualTo('SUCCESS')) {
                    archiveArtifacts artifacts: 'dist/add2vals', allowEmptyArchive: false
                }
            }
        }
}